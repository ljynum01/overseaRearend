package com.example.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IncomeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public IncomeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIncomesumIsNull() {
            addCriterion("incomesum is null");
            return (Criteria) this;
        }

        public Criteria andIncomesumIsNotNull() {
            addCriterion("incomesum is not null");
            return (Criteria) this;
        }

        public Criteria andIncomesumEqualTo(String value) {
            addCriterion("incomesum =", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumNotEqualTo(String value) {
            addCriterion("incomesum <>", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumGreaterThan(String value) {
            addCriterion("incomesum >", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumGreaterThanOrEqualTo(String value) {
            addCriterion("incomesum >=", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumLessThan(String value) {
            addCriterion("incomesum <", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumLessThanOrEqualTo(String value) {
            addCriterion("incomesum <=", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumLike(String value) {
            addCriterion("incomesum like", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumNotLike(String value) {
            addCriterion("incomesum not like", value, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumIn(List<String> values) {
            addCriterion("incomesum in", values, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumNotIn(List<String> values) {
            addCriterion("incomesum not in", values, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumBetween(String value1, String value2) {
            addCriterion("incomesum between", value1, value2, "incomesum");
            return (Criteria) this;
        }

        public Criteria andIncomesumNotBetween(String value1, String value2) {
            addCriterion("incomesum not between", value1, value2, "incomesum");
            return (Criteria) this;
        }

        public Criteria andAmoutIsNull() {
            addCriterion("amout is null");
            return (Criteria) this;
        }

        public Criteria andAmoutIsNotNull() {
            addCriterion("amout is not null");
            return (Criteria) this;
        }

        public Criteria andAmoutEqualTo(String value) {
            addCriterion("amout =", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutNotEqualTo(String value) {
            addCriterion("amout <>", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutGreaterThan(String value) {
            addCriterion("amout >", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutGreaterThanOrEqualTo(String value) {
            addCriterion("amout >=", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutLessThan(String value) {
            addCriterion("amout <", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutLessThanOrEqualTo(String value) {
            addCriterion("amout <=", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutLike(String value) {
            addCriterion("amout like", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutNotLike(String value) {
            addCriterion("amout not like", value, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutIn(List<String> values) {
            addCriterion("amout in", values, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutNotIn(List<String> values) {
            addCriterion("amout not in", values, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutBetween(String value1, String value2) {
            addCriterion("amout between", value1, value2, "amout");
            return (Criteria) this;
        }

        public Criteria andAmoutNotBetween(String value1, String value2) {
            addCriterion("amout not between", value1, value2, "amout");
            return (Criteria) this;
        }

        public Criteria andFinaltimeIsNull() {
            addCriterion("finaltime is null");
            return (Criteria) this;
        }

        public Criteria andFinaltimeIsNotNull() {
            addCriterion("finaltime is not null");
            return (Criteria) this;
        }

        public Criteria andFinaltimeEqualTo(Date value) {
            addCriterion("finaltime =", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeNotEqualTo(Date value) {
            addCriterion("finaltime <>", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeGreaterThan(Date value) {
            addCriterion("finaltime >", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeGreaterThanOrEqualTo(Date value) {
            addCriterion("finaltime >=", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeLessThan(Date value) {
            addCriterion("finaltime <", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeLessThanOrEqualTo(Date value) {
            addCriterion("finaltime <=", value, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeIn(List<Date> values) {
            addCriterion("finaltime in", values, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeNotIn(List<Date> values) {
            addCriterion("finaltime not in", values, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeBetween(Date value1, Date value2) {
            addCriterion("finaltime between", value1, value2, "finaltime");
            return (Criteria) this;
        }

        public Criteria andFinaltimeNotBetween(Date value1, Date value2) {
            addCriterion("finaltime not between", value1, value2, "finaltime");
            return (Criteria) this;
        }

        public Criteria andSidIsNull() {
            addCriterion("sid is null");
            return (Criteria) this;
        }

        public Criteria andSidIsNotNull() {
            addCriterion("sid is not null");
            return (Criteria) this;
        }

        public Criteria andSidEqualTo(Integer value) {
            addCriterion("sid =", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidNotEqualTo(Integer value) {
            addCriterion("sid <>", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidGreaterThan(Integer value) {
            addCriterion("sid >", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidGreaterThanOrEqualTo(Integer value) {
            addCriterion("sid >=", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidLessThan(Integer value) {
            addCriterion("sid <", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidLessThanOrEqualTo(Integer value) {
            addCriterion("sid <=", value, "sid");
            return (Criteria) this;
        }

        public Criteria andSidIn(List<Integer> values) {
            addCriterion("sid in", values, "sid");
            return (Criteria) this;
        }

        public Criteria andSidNotIn(List<Integer> values) {
            addCriterion("sid not in", values, "sid");
            return (Criteria) this;
        }

        public Criteria andSidBetween(Integer value1, Integer value2) {
            addCriterion("sid between", value1, value2, "sid");
            return (Criteria) this;
        }

        public Criteria andSidNotBetween(Integer value1, Integer value2) {
            addCriterion("sid not between", value1, value2, "sid");
            return (Criteria) this;
        }

        public Criteria andDidIsNull() {
            addCriterion("did is null");
            return (Criteria) this;
        }

        public Criteria andDidIsNotNull() {
            addCriterion("did is not null");
            return (Criteria) this;
        }

        public Criteria andDidEqualTo(Integer value) {
            addCriterion("did =", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidNotEqualTo(Integer value) {
            addCriterion("did <>", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidGreaterThan(Integer value) {
            addCriterion("did >", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidGreaterThanOrEqualTo(Integer value) {
            addCriterion("did >=", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidLessThan(Integer value) {
            addCriterion("did <", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidLessThanOrEqualTo(Integer value) {
            addCriterion("did <=", value, "did");
            return (Criteria) this;
        }

        public Criteria andDidIn(List<Integer> values) {
            addCriterion("did in", values, "did");
            return (Criteria) this;
        }

        public Criteria andDidNotIn(List<Integer> values) {
            addCriterion("did not in", values, "did");
            return (Criteria) this;
        }

        public Criteria andDidBetween(Integer value1, Integer value2) {
            addCriterion("did between", value1, value2, "did");
            return (Criteria) this;
        }

        public Criteria andDidNotBetween(Integer value1, Integer value2) {
            addCriterion("did not between", value1, value2, "did");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table income
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 06 22:29:42 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table income
     *
     * @mbg.generated Fri Jan 06 22:29:42 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}